// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicTypes.proto

package com.hederahashgraph.api.proto.java;

public interface KeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.Key)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * smart contract instance that is authorized as if it had signed with a key
   * </pre>
   *
   * <code>.proto.ContractID contractID = 1;</code>
   */
  boolean hasContractID();
  /**
   * <pre>
   * smart contract instance that is authorized as if it had signed with a key
   * </pre>
   *
   * <code>.proto.ContractID contractID = 1;</code>
   */
  com.hederahashgraph.api.proto.java.ContractID getContractID();
  /**
   * <pre>
   * smart contract instance that is authorized as if it had signed with a key
   * </pre>
   *
   * <code>.proto.ContractID contractID = 1;</code>
   */
  com.hederahashgraph.api.proto.java.ContractIDOrBuilder getContractIDOrBuilder();

  /**
   * <pre>
   * ed25519 public key
   * </pre>
   *
   * <code>bytes ed25519 = 2;</code>
   */
  com.google.protobuf.ByteString getEd25519();

  /**
   * <pre>
   *RSA-3072 public key
   * </pre>
   *
   * <code>bytes RSA_3072 = 3;</code>
   */
  com.google.protobuf.ByteString getRSA3072();

  /**
   * <pre>
   *ECDSA with the p-384 curve public key
   * </pre>
   *
   * <code>bytes ECDSA_384 = 4;</code>
   */
  com.google.protobuf.ByteString getECDSA384();

  /**
   * <pre>
   * a threshold N followed by a list of M keys, any N of which are required to form a valid signature
   * </pre>
   *
   * <code>.proto.ThresholdKey thresholdKey = 5;</code>
   */
  boolean hasThresholdKey();
  /**
   * <pre>
   * a threshold N followed by a list of M keys, any N of which are required to form a valid signature
   * </pre>
   *
   * <code>.proto.ThresholdKey thresholdKey = 5;</code>
   */
  com.hederahashgraph.api.proto.java.ThresholdKey getThresholdKey();
  /**
   * <pre>
   * a threshold N followed by a list of M keys, any N of which are required to form a valid signature
   * </pre>
   *
   * <code>.proto.ThresholdKey thresholdKey = 5;</code>
   */
  com.hederahashgraph.api.proto.java.ThresholdKeyOrBuilder getThresholdKeyOrBuilder();

  /**
   * <pre>
   * a list of Keys.
   * </pre>
   *
   * <code>.proto.KeyList keyList = 6;</code>
   */
  boolean hasKeyList();
  /**
   * <pre>
   * a list of Keys.
   * </pre>
   *
   * <code>.proto.KeyList keyList = 6;</code>
   */
  com.hederahashgraph.api.proto.java.KeyList getKeyList();
  /**
   * <pre>
   * a list of Keys.
   * </pre>
   *
   * <code>.proto.KeyList keyList = 6;</code>
   */
  com.hederahashgraph.api.proto.java.KeyListOrBuilder getKeyListOrBuilder();

  public com.hederahashgraph.api.proto.java.Key.KeyCase getKeyCase();
}
