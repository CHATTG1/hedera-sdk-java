// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicTypes.proto

package com.hederahashgraph.api.proto.java;

/**
 * <pre>
 * The functionalities provided by hedera hashgraph 
 * </pre>
 *
 * Protobuf enum {@code proto.HederaFunctionality}
 */
public enum HederaFunctionality
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * crypto create account
   * </pre>
   *
   * <code>CryptoCreates = 0;</code>
   */
  CryptoCreates(0),
  /**
   * <pre>
   * crypto transfer
   * </pre>
   *
   * <code>CryptoTransfer = 1;</code>
   */
  CryptoTransfer(1),
  /**
   * <pre>
   * crypto update account
   * </pre>
   *
   * <code>CryptoUpdate = 2;</code>
   */
  CryptoUpdate(2),
  /**
   * <pre>
   * crypto delete account
   * </pre>
   *
   * <code>CryptoDelete = 3;</code>
   */
  CryptoDelete(3),
  /**
   * <pre>
   * crypto add claim to the account
   * </pre>
   *
   * <code>CryptoAddClaim = 4;</code>
   */
  CryptoAddClaim(4),
  /**
   * <pre>
   * crypto delete claim to the account
   * </pre>
   *
   * <code>CryptoDeletClaim = 5;</code>
   */
  CryptoDeletClaim(5),
  /**
   * <pre>
   * Smart Contract Call
   * </pre>
   *
   * <code>ContractCall = 6;</code>
   */
  ContractCall(6),
  /**
   * <pre>
   * Smart Contract Create Contract
   * </pre>
   *
   * <code>ContractCreate = 7;</code>
   */
  ContractCreate(7),
  /**
   * <pre>
   * Smart Contract update contract
   * </pre>
   *
   * <code>ContractUpdate = 8;</code>
   */
  ContractUpdate(8),
  /**
   * <pre>
   * File Operation create file
   * </pre>
   *
   * <code>FileCreate = 9;</code>
   */
  FileCreate(9),
  /**
   * <pre>
   * File Operation append file
   * </pre>
   *
   * <code>FileAppend = 10;</code>
   */
  FileAppend(10),
  /**
   * <pre>
   * File Operation update file
   * </pre>
   *
   * <code>FileUpdate = 11;</code>
   */
  FileUpdate(11),
  /**
   * <pre>
   * File Operation delete file
   * </pre>
   *
   * <code>FileDelete = 12;</code>
   */
  FileDelete(12),
  /**
   * <pre>
   * crypto get account balance
   * </pre>
   *
   * <code>CryptoGetAccountBalance = 13;</code>
   */
  CryptoGetAccountBalance(13),
  /**
   * <pre>
   * crypto get account record
   * </pre>
   *
   * <code>CryptoGetAccountRecords = 14;</code>
   */
  CryptoGetAccountRecords(14),
  /**
   * <pre>
   * Crypto get info
   * </pre>
   *
   * <code>CryptoGetInfo = 15;</code>
   */
  CryptoGetInfo(15),
  /**
   * <pre>
   * Smart Contract Call
   * </pre>
   *
   * <code>ContractCallLocal = 16;</code>
   */
  ContractCallLocal(16),
  /**
   * <pre>
   * Smart Contract get info
   * </pre>
   *
   * <code>ContractGetInfo = 17;</code>
   */
  ContractGetInfo(17),
  /**
   * <pre>
   * Smart Contract, get the byte code
   * </pre>
   *
   * <code>ContractGetBytecode = 18;</code>
   */
  ContractGetBytecode(18),
  /**
   * <pre>
   * Smart Contract, get by solidity ID
   * </pre>
   *
   * <code>GetBySolidityID = 19;</code>
   */
  GetBySolidityID(19),
  /**
   * <pre>
   * Smart Contract, get by key
   * </pre>
   *
   * <code>GetByKey = 20;</code>
   */
  GetByKey(20),
  /**
   * <pre>
   * Crypto get the claim
   * </pre>
   *
   * <code>CryptoGetClaim = 21;</code>
   */
  CryptoGetClaim(21),
  /**
   * <pre>
   * Cryto, get the stakers for the node
   * </pre>
   *
   * <code>CryptoGetStakers = 22;</code>
   */
  CryptoGetStakers(22),
  /**
   * <pre>
   * File Operations get file contents
   * </pre>
   *
   * <code>FileGetContents = 23;</code>
   */
  FileGetContents(23),
  /**
   * <pre>
   * File Operations get the info of the file
   * </pre>
   *
   * <code>FileGetInfo = 24;</code>
   */
  FileGetInfo(24),
  /**
   * <pre>
   * Crypto get the transaction records
   * </pre>
   *
   * <code>TransactionGetRecord = 25;</code>
   */
  TransactionGetRecord(25),
  /**
   * <code>ContractGetRecords = 26;</code>
   */
  ContractGetRecords(26),
  /**
   * <code>CryptoCreate = 27;</code>
   */
  CryptoCreate(27),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * crypto create account
   * </pre>
   *
   * <code>CryptoCreates = 0;</code>
   */
  public static final int CryptoCreates_VALUE = 0;
  /**
   * <pre>
   * crypto transfer
   * </pre>
   *
   * <code>CryptoTransfer = 1;</code>
   */
  public static final int CryptoTransfer_VALUE = 1;
  /**
   * <pre>
   * crypto update account
   * </pre>
   *
   * <code>CryptoUpdate = 2;</code>
   */
  public static final int CryptoUpdate_VALUE = 2;
  /**
   * <pre>
   * crypto delete account
   * </pre>
   *
   * <code>CryptoDelete = 3;</code>
   */
  public static final int CryptoDelete_VALUE = 3;
  /**
   * <pre>
   * crypto add claim to the account
   * </pre>
   *
   * <code>CryptoAddClaim = 4;</code>
   */
  public static final int CryptoAddClaim_VALUE = 4;
  /**
   * <pre>
   * crypto delete claim to the account
   * </pre>
   *
   * <code>CryptoDeletClaim = 5;</code>
   */
  public static final int CryptoDeletClaim_VALUE = 5;
  /**
   * <pre>
   * Smart Contract Call
   * </pre>
   *
   * <code>ContractCall = 6;</code>
   */
  public static final int ContractCall_VALUE = 6;
  /**
   * <pre>
   * Smart Contract Create Contract
   * </pre>
   *
   * <code>ContractCreate = 7;</code>
   */
  public static final int ContractCreate_VALUE = 7;
  /**
   * <pre>
   * Smart Contract update contract
   * </pre>
   *
   * <code>ContractUpdate = 8;</code>
   */
  public static final int ContractUpdate_VALUE = 8;
  /**
   * <pre>
   * File Operation create file
   * </pre>
   *
   * <code>FileCreate = 9;</code>
   */
  public static final int FileCreate_VALUE = 9;
  /**
   * <pre>
   * File Operation append file
   * </pre>
   *
   * <code>FileAppend = 10;</code>
   */
  public static final int FileAppend_VALUE = 10;
  /**
   * <pre>
   * File Operation update file
   * </pre>
   *
   * <code>FileUpdate = 11;</code>
   */
  public static final int FileUpdate_VALUE = 11;
  /**
   * <pre>
   * File Operation delete file
   * </pre>
   *
   * <code>FileDelete = 12;</code>
   */
  public static final int FileDelete_VALUE = 12;
  /**
   * <pre>
   * crypto get account balance
   * </pre>
   *
   * <code>CryptoGetAccountBalance = 13;</code>
   */
  public static final int CryptoGetAccountBalance_VALUE = 13;
  /**
   * <pre>
   * crypto get account record
   * </pre>
   *
   * <code>CryptoGetAccountRecords = 14;</code>
   */
  public static final int CryptoGetAccountRecords_VALUE = 14;
  /**
   * <pre>
   * Crypto get info
   * </pre>
   *
   * <code>CryptoGetInfo = 15;</code>
   */
  public static final int CryptoGetInfo_VALUE = 15;
  /**
   * <pre>
   * Smart Contract Call
   * </pre>
   *
   * <code>ContractCallLocal = 16;</code>
   */
  public static final int ContractCallLocal_VALUE = 16;
  /**
   * <pre>
   * Smart Contract get info
   * </pre>
   *
   * <code>ContractGetInfo = 17;</code>
   */
  public static final int ContractGetInfo_VALUE = 17;
  /**
   * <pre>
   * Smart Contract, get the byte code
   * </pre>
   *
   * <code>ContractGetBytecode = 18;</code>
   */
  public static final int ContractGetBytecode_VALUE = 18;
  /**
   * <pre>
   * Smart Contract, get by solidity ID
   * </pre>
   *
   * <code>GetBySolidityID = 19;</code>
   */
  public static final int GetBySolidityID_VALUE = 19;
  /**
   * <pre>
   * Smart Contract, get by key
   * </pre>
   *
   * <code>GetByKey = 20;</code>
   */
  public static final int GetByKey_VALUE = 20;
  /**
   * <pre>
   * Crypto get the claim
   * </pre>
   *
   * <code>CryptoGetClaim = 21;</code>
   */
  public static final int CryptoGetClaim_VALUE = 21;
  /**
   * <pre>
   * Cryto, get the stakers for the node
   * </pre>
   *
   * <code>CryptoGetStakers = 22;</code>
   */
  public static final int CryptoGetStakers_VALUE = 22;
  /**
   * <pre>
   * File Operations get file contents
   * </pre>
   *
   * <code>FileGetContents = 23;</code>
   */
  public static final int FileGetContents_VALUE = 23;
  /**
   * <pre>
   * File Operations get the info of the file
   * </pre>
   *
   * <code>FileGetInfo = 24;</code>
   */
  public static final int FileGetInfo_VALUE = 24;
  /**
   * <pre>
   * Crypto get the transaction records
   * </pre>
   *
   * <code>TransactionGetRecord = 25;</code>
   */
  public static final int TransactionGetRecord_VALUE = 25;
  /**
   * <code>ContractGetRecords = 26;</code>
   */
  public static final int ContractGetRecords_VALUE = 26;
  /**
   * <code>CryptoCreate = 27;</code>
   */
  public static final int CryptoCreate_VALUE = 27;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static HederaFunctionality valueOf(int value) {
    return forNumber(value);
  }

  public static HederaFunctionality forNumber(int value) {
    switch (value) {
      case 0: return CryptoCreates;
      case 1: return CryptoTransfer;
      case 2: return CryptoUpdate;
      case 3: return CryptoDelete;
      case 4: return CryptoAddClaim;
      case 5: return CryptoDeletClaim;
      case 6: return ContractCall;
      case 7: return ContractCreate;
      case 8: return ContractUpdate;
      case 9: return FileCreate;
      case 10: return FileAppend;
      case 11: return FileUpdate;
      case 12: return FileDelete;
      case 13: return CryptoGetAccountBalance;
      case 14: return CryptoGetAccountRecords;
      case 15: return CryptoGetInfo;
      case 16: return ContractCallLocal;
      case 17: return ContractGetInfo;
      case 18: return ContractGetBytecode;
      case 19: return GetBySolidityID;
      case 20: return GetByKey;
      case 21: return CryptoGetClaim;
      case 22: return CryptoGetStakers;
      case 23: return FileGetContents;
      case 24: return FileGetInfo;
      case 25: return TransactionGetRecord;
      case 26: return ContractGetRecords;
      case 27: return CryptoCreate;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<HederaFunctionality>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      HederaFunctionality> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<HederaFunctionality>() {
          public HederaFunctionality findValueByNumber(int number) {
            return HederaFunctionality.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.hederahashgraph.api.proto.java.BasicTypes.getDescriptor().getEnumTypes().get(0);
  }

  private static final HederaFunctionality[] VALUES = values();

  public static HederaFunctionality valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private HederaFunctionality(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:proto.HederaFunctionality)
}

